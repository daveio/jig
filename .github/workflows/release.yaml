name: Publish Python üêç distribution üì¶ to PyPI and GitHub Releases
"on":
  push:
    tags:
      - "**"
jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@09d2acae674a48949e3602304ab46fd20ae0c42f
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@5fa0ee6f38acba344a11175befcf11c0c1d46f5a
        with:
          python-version: 3.12
      - name: Install poetry
        run: python3 -m pip install poetry --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m poetry build
      - name: Store the distribution packages
        uses: actions/upload-artifact@de65e23aa2b7e23d713bb51fbfcb6d502f8667d8
        with:
          name: python-package-distributions
          path: dist/
  pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    needs:
      - build
    runs-on: ubuntu-24.04
    environment:
      name: pypi
      url: https://pypi.org/p/belt-cli
    permissions:
      id-token: write
    steps:
      - name: Download dists
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@e9ccbe5a211ba3e8363f472cae362b56b104e796
  github-release:
    name: Sign the Python üêç distribution üì¶ with Sigstore and upload them to GitHub Release
    needs:
      - build
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@f38fa95e2fe947a0827cf83585e9cd65f6107d5a
        with:
          inputs: ./dist/*.tar.gz ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release create "$GITHUB_REF_NAME" --repo "$GITHUB_REPOSITORY" --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release upload "$GITHUB_REF_NAME" dist/** --repo "$GITHUB_REPOSITORY"
  docker:
    name: Push Docker image to Docker Hub and GitHub
    runs-on: ubuntu-24.04
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@09d2acae674a48949e3602304ab46fd20ae0c42f
      - name: Log in to Docker Hub
        uses: docker/login-action@3d100841f68d4548bf57e52eb27bd33ec5069f55
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Log in to the Container registry
        uses: docker/login-action@3d100841f68d4548bf57e52eb27bd33ec5069f55
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@b798ed8388581f6f002541048b6458ca2c4ba442
        with:
          images: |
            daveio/belt
            ghcr.io/${{ github.repository }}
      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation for Docker Hub
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be
        with:
          subject-name: docker.io/daveio/belt
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      - name: Generate artifact attestation for GitHub
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be
        with:
          subject-name: ghcr.io/daveio/belt
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
